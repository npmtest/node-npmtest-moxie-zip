{"/home/travis/build/npmtest/node-npmtest-moxie-zip/test.js":"/* istanbul instrument in package npmtest_moxie_zip */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-moxie-zip/lib.npmtest_moxie_zip.js":"/* istanbul instrument in package npmtest_moxie_zip */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_moxie_zip = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_moxie_zip = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-moxie-zip/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-moxie-zip && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_moxie_zip */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_moxie_zip\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_moxie_zip.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_moxie_zip.rollup.js'] =\n            local.assetsDict['/assets.npmtest_moxie_zip.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_moxie_zip.__dirname + '/lib.npmtest_moxie_zip.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-moxie-zip/node_modules/moxie-zip/lib/ZipWriter.js":"/*jshint node:true, bitwise:false */\n\nvar fs = require('fs');\nvar zlib = require('zlib');\n\nfunction ZipWriter() {\n\tvar entries = [];\n\n\tfunction calculateCrc32(buf) {\n\t\tvar CRC_TABLE = [\n\t\t\t0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419,\n\t\t\t0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4,\n\t\t\t0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07,\n\t\t\t0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,\n\t\t\t0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856,\n\t\t\t0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n\t\t\t0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4,\n\t\t\t0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n\t\t\t0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3,\n\t\t\t0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a,\n\t\t\t0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599,\n\t\t\t0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n\t\t\t0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190,\n\t\t\t0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f,\n\t\t\t0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e,\n\t\t\t0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n\t\t\t0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed,\n\t\t\t0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n\t\t\t0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3,\n\t\t\t0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,\n\t\t\t0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a,\n\t\t\t0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5,\n\t\t\t0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010,\n\t\t\t0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n\t\t\t0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17,\n\t\t\t0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6,\n\t\t\t0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615,\n\t\t\t0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,\n\t\t\t0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344,\n\t\t\t0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n\t\t\t0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a,\n\t\t\t0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n\t\t\t0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1,\n\t\t\t0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c,\n\t\t\t0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef,\n\t\t\t0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n\t\t\t0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe,\n\t\t\t0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31,\n\t\t\t0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c,\n\t\t\t0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n\t\t\t0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b,\n\t\t\t0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n\t\t\t0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1,\n\t\t\t0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\n\t\t\t0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278,\n\t\t\t0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7,\n\t\t\t0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66,\n\t\t\t0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n\t\t\t0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605,\n\t\t\t0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8,\n\t\t\t0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b,\n\t\t\t0x2d02ef8d\n\t\t];\n\n\t\tvar crc = ~0;\n\t\tfor (var ix = 0; ix < buf.length; ix++) {\n\t\t\tvar offset = (crc ^ buf[ix]) & 0xFF;\n\t\t\tcrc = (crc >>> 8) ^ CRC_TABLE[offset];\n\t\t}\n\n\t\treturn crc ^ -1;\n\t}\n\n\tfunction pack(items) {\n\t\tvar data = arguments, idx = 0, buffer, bufferSize = 0;\n\n\t\t// Calculate buffer size\n\t\titems = items.split('');\n\t\titems.forEach(function(type) {\n\t\t\tif (type == 'v') {\n\t\t\t\tbufferSize += 2;\n\t\t\t} else if (type == 'V' || type == 'l') {\n\t\t\t\tbufferSize += 4;\n\t\t\t}\n\t\t});\n\n\t\t// Fill buffer\n\t\tbuffer = new Buffer(bufferSize);\n\t\titems.forEach(function(type, index) {\n\t\t\tif (type == 'v') {\n\t\t\t\tbuffer.writeUInt16LE(data[index + 1], idx);\n\t\t\t\tidx += 2;\n\t\t\t} else if (type == 'V') {\n\t\t\t\tbuffer.writeUInt32LE(data[index + 1], idx);\n\t\t\t\tidx += 4;\n\t\t\t} else if (type == 'l') {\n\t\t\t\tbuffer.writeInt32LE(data[index + 1], idx);\n\t\t\t\tidx += 4;\n\t\t\t}\n\t\t});\n\n\t\treturn buffer;\n\t}\n\n\tfunction normalizeZipPath(zipPath) {\n\t\treturn zipPath.replace(/\\\\/g, '/').replace(/^\\/|\\/$/g, '');\n\t}\n\n\tthis.addEntry = function(entry) {\n\t\tentry.path = normalizeZipPath(entry.path);\n\t\tentries.push(entry);\n\t};\n\n\tthis.addFile = function(zipPath, localPath) {\n\t\tthis.addEntry({\n\t\t\tpath: zipPath,\n\t\t\tfile: localPath\n\t\t});\n\t};\n\n\tthis.addDir = function(zipPath, localPath) {\n\t\tthis.addEntry({\n\t\t\tpath: zipPath,\n\t\t\tfile: localPath,\n\t\t\tisFile: false\n\t\t});\n\t};\n\n\tthis.addData = function(zipPath, data) {\n\t\tif (!Buffer.isBuffer(data)) {\n\t\t\tdata = new Buffer(data);\n\t\t}\n\n\t\tthis.addEntry({\n\t\t\tpath: zipPath,\n\t\t\tdata: data\n\t\t});\n\t};\n\n\tfunction buildZipBuffer() {\n\t\tvar buffers = [];\n\t\tvar length = 0;\n\n\t\tfunction append(buf) {\n\t\t\tif (typeof(buf) == \"string\") {\n\t\t\t\tbuf = new Buffer(buf);\n\t\t\t}\n\n\t\t\tbuffers.push(buf);\n\t\t\tlength += buf.length;\n\t\t}\n\n\t\tentries.forEach(function(entry) {\n\t\t\tvar mtime, mdate;\n\n\t\t\tentry.extra = entry.extra || \"\";\n\t\t\tentry.comment = entry.comment || \"\";\n\t\t\tentry.cmethod = entry.csize > 0 ? 0x0008 : 0; // Deflate/Store\n\t\t\tmtime = entry.mtime;\n\t\t\tmdate = entry.mdate;\n\n\t\t\t// Convert unix time to dos time\n\t\t\tif (entry.mtime instanceof Date) {\n\t\t\t\tmtime = entry.mtime.getHours();\n\t\t\t\tmtime = mtime << 6;\n\t\t\t\tmtime = mtime | entry.mtime.getMinutes();\n\t\t\t\tmtime = mtime << 5;\n\t\t\t\tmtime = mtime | entry.mtime.getSeconds() / 2;\n\n\t\t\t\tmdate = entry.mtime.getFullYear() - 1980;\n\t\t\t\tmdate = mdate << 4;\n\t\t\t\tmdate = mdate | (entry.mtime.getMonth() + 1);\n\t\t\t\tmdate = mdate << 5;\n\t\t\t\tmdate = mdate | entry.mtime.getDate();\n\t\t\t}\n\n\t\t\t// Setup filename\n\t\t\tvar fileName = entry.path;\n\n\t\t\tif (!entry.isFile && fileName.charAt(fileName.length - 1) != '/') {\n\t\t\t\tentry.path = fileName = fileName + \"/\";\n\t\t\t}\n\n\t\t\tentry.offset = length;\n\n\t\t\t// Write local file header\n\t\t\tappend(pack(\"VvvvvvlVVvv\",\n\t\t\t\t0x04034b50,        // Local File Header Signature\n\t\t\t\t0x0014,            // Version needed to extract\n\t\t\t\t0x0002,            // General purpose bit flag\n\t\t\t\tentry.cmethod,     // Compression method (deflate)\n\t\t\t\tmtime,             // Last mod file time (MS-DOS)\n\t\t\t\tmdate,             // Last mod file date (MS-DOS)\n\t\t\t\tentry.crc32,       // CRC-32\n\t\t\t\tentry.csize,       // Compressed size\n\t\t\t\tentry.size,        // Uncompressed size\n\t\t\t\tfileName.length,   // Filename length\n\t\t\t\tentry.extra.length // Extra field length\n\t\t\t));\n\n\t\t\t// Write variable data\n\t\t\tappend(fileName);\n\t\t\tappend(entry.extra);\n\t\t\tappend(entry.data);\n\n\t\t\tentry.mtime = mtime;\n\t\t\tentry.mdate = mdate;\n\t\t\tentry.eattr = entry.isFile ? 0x00000020 : 0x00000030;\n\t\t});\n\n\t\tvar startOffset = length;\n\t\tvar centralDirSize = 0;\n\n\t\t// Write central directory information\n\t\tentries.forEach(function(entry) {\n\t\t\t// Add central directory file header\n\t\t\tappend(pack(\"VvvvvvvlVVvvvvvVV\",\n\t\t\t\t0x02014b50,           // Central file header signature\n\t\t\t\t0x0014,               // Version made by\n\t\t\t\t0x0014,               // Version extracted\n\t\t\t\t0x0002,               // General purpose bit flag\n\t\t\t\tentry.cmethod,        // Compression method (deflate)\n\t\t\t\tentry.mtime,          // Last mod file time (MS-DOS)\n\t\t\t\tentry.mdate,          // Last mod file date (MS-DOS)\n\t\t\t\tentry.crc32,          // CRC-32\n\t\t\t\tentry.csize,          // Compressed size\n\t\t\t\tentry.size,           // Uncompressed size\n\t\t\t\tentry.path.length,    // Filename length\n\t\t\t\tentry.extra.length,   // Extra field length\n\t\t\t\tentry.comment.length, // Comment length\n\t\t\t\t0,                    // Disk\n\t\t\t\t0,                    // Internal file attributes\n\t\t\t\tentry.eattr,          // External file attributes\n\t\t\t\tentry.offset          // Relative offset of local file header\n\t\t\t));\n\n\t\t\t// Write filename, extra field and comment\n\t\t\tappend(entry.path);\n\t\t\tappend(entry.extra);\n\t\t\tappend(entry.comment);\n\n\t\t\t// Central directory info size + file name length + extra field length + comment length\n\t\t\tcentralDirSize += 46 + entry.path.length + entry.extra.length + entry.comment.length;\n\t\t});\n\n\t\tvar comment = \"\";\n\n\t\t// Write end of central directory record\n\t\tappend(pack(\"VvvvvVVv\",\n\t\t\t0x06054b50,       // End of central directory signature\n\t\t\t0,                // Number of this disk\n\t\t\t0,                // Disk where central directory starts\n\t\t\tentries.length,   // Number of central directory records on this disk\n\t\t\tentries.length,   // Total number of central directory records\n\t\t\tcentralDirSize,   // Size of central directory (bytes)\n\t\t\tstartOffset,      // Offset of start of central directory, relative to start of archive\n\t\t\tcomment.length    // Zip file comment length\n\t\t));\n\n\t\t// Write comment\n\t\tappend(comment);\n\n\t\tvar buffer = Buffer.concat(buffers);\n\t\treturn buffer;\n\t}\n\n\tthis.toBuffer = function(callback) {\n\t\tvar index = -1;\n\n\t\tfunction deflateNext() {\n\t\t\tvar data;\n\n\t\t\tvar entry = entries[++index];\n\t\t\tif (entry)  {\n\t\t\t\tentry.csize = entry.size = entry.crc32 = 0;\n\n\t\t\t\tdata = entry.data = entry.data ? entry.data : new Buffer(0);\n\n\t\t\t\tif (entry.file) {\n\t\t\t\t\tvar stats = fs.statSync(entry.file);\n\t\t\t\t\tentry.mtime = stats.mtime;\n\n\t\t\t\t\tif (stats.isFile()) {\n\t\t\t\t\t\tdata = fs.readFileSync(entry.file);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tentry.mtime = new Date();\n\t\t\t\t}\n\n\t\t\t\tif (entry.isFile !== false) {\n\t\t\t\t\tentry.crc32 = calculateCrc32(data);\n\t\t\t\t\tentry.isFile = true;\n\t\t\t\t\tentry.size = data.length;\n\n\t\t\t\t\tzlib.deflateRaw(data, function(err, buf) {\n\t\t\t\t\t\tentry.data = buf;\n\t\t\t\t\t\tentry.csize = buf.length;\n\n\t\t\t\t\t\tdeflateNext();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdeflateNext();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcallback(buildZipBuffer());\n\t\t\t}\n\t\t}\n\n\t\tdeflateNext();\n\t};\n\n\tthis.saveAs = function(filePath, callback) {\n\t\tthis.toBuffer(function(buf) {\n\t\t\tfs.writeFile(filePath, buf, callback);\n\t\t});\n\t};\n}\n\nmodule.exports.ZipWriter = ZipWriter;\n"}